generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Project {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  villas      Villa[]
}

enum VillaStatus {
  available
  reserved
  sold
}

model Villa {
  id               Int          @id @default(autoincrement())
  projectId        Int
  project          Project      @relation(fields: [projectId], references: [id], onDelete: Cascade)

  // Common identity
  name             String
  villaType        String
  rooms            Int

  // Dimensions
  landSqm          Float
  villaSqm         Float
  floor1Sqm        Float?
  floor2Sqm        Float?
  rooftopSqm       Float?
  gardenPoolSqm    Float?

  // Pricing core
  pricePerSqm      Float
  basePrice        Float
  vatRate          Float        @default(0.11)
  priceWithVat     Float
  firstPayment     Float?
  status           VillaStatus  @default(available)

  // Extra for "your app"
  areaSqm          Float
  monthlyPriceGrowthPct Float   @default(0.0)
  leaseholdEndDate DateTime?
  dailyRateUSD     Float?       // daily accommodation rate
  rentalGrowthPct  Float?       // rental price growth per year (%)
  occupancyPct     Float?       // optional, % 0..100

  createdAt        DateTime     @default(now())
  updatedAt        DateTime     @updatedAt

  scenarios        Scenario[]
}

model Scenario {
  id        Int      @id @default(autoincrement())
  name      String
  villaId   Int
  villa     Villa    @relation(fields: [villaId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}